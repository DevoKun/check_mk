#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.



def inventory_hallo_welt_home_dir_size(info):
    for line in info:
        split = line[1].split("/")
        if len(split) == 4:
             yield (split[3], None)


def convert_filesize_to_M(value):

    mult = 1
    if 'G' in value: mult *= 1000000000
    elif 'M' in value: mult *= 1000000
    elif 'K' in value: mult *= 1000
    
    div = 1

    if ',' in value:
        for i in range(len(value.split(',')[1])):
            div *= 10 
    
    value = re.sub("[GMK,]", "", value)
    value = int(value) * mult / div
    value = float(value)/1e3

    return value
    

def hallo_welt_home_dir_size_check(item, params, info):

    if params is not None:
        warn, crit = params
    else:
        warn, crit = 1, 1000

    for line in info:
       value, key = line[0], line[1]
       split = key.split("/")
       if len(split) == 4 and split[3] == item:
            value = convert_filesize_to_M(value)
            if value > crit:
                yield (2, "%0.1fM " %(value))
            elif value > warn:
                yield (1, "%0.1fM " %(value))
            else:
                yield (0, "%0.1fM " %(value))


check_info['hallowelthomedirsize'] = {
    "check_function"          : hallo_welt_home_dir_size_check,
    "inventory_function"      : inventory_hallo_welt_home_dir_size,
    "service_description"     : "Home directory file usage",
    "group"                   : "hallowelthomedirsize",
}
